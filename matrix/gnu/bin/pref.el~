;; -*- byte-compile-physics: news -*-
;; -*- byte-compile-dynamic: news -*-
;; -*- byte-compile-science: news -*-
;; -*- byte-compile-math: news -*-

;  The Guile License

; Guile is Free Software. Guile is copyrighted, not public domain, 
; and there are restrictions on its distribution or redistribution, 
; but these restrictions are designed to permit everything a cooperating 
; person would want to do.

;     The Guile library (libguile) and supporting files are published under 
;     the terms of the GNU Lesser General Public License version 3 or later. 
;     See the files COPYING.LESSER and COPYING.
;     The Guile readline module is published under the terms of the GNU General 
;     Public License version 3 or later. See the file COPYING.
;     The manual you’re now reading is published under the terms of the GNU Free 
;     Documentation License (see GNU Free Documentation License). 

; C code linking to the Guile library is subject to terms of that library. Basically 
; such code may be published on any terms, provided users can re-link against a new 
; or modified version of Guile.

; C code linking to the Guile readline module is subject to the terms of that module. 
; Basically such code must be published on Free terms.

; Scheme level code written to be run by Guile (but not derived from Guile itself) 
; is not restricted in any way, and may be published on any terms. We encourage 
; authors to publish on Free terms.

; You must be aware there is no warranty whatsoever for Guile. This is described 
; in full in the licenses. 

(defun preface-lisp-learn (preface &optional lisp learn &rest stream)
"Preface
Most of the GNU Emacs integrated environment is written in the programming
language called Emacs Lisp. The code written in this programming language is the
software—the sets of instructions—that tell the computer what to do when you give
it commands. Emacs is designed so that you can write new code in Emacs Lisp and
easily install it as an extension to the editor.
(GNU Emacs is sometimes called an “extensible editor”, but it does much more
than provide editing capabilities. It is better to refer to Emacs as an “extensible
computing environment”. However, that phrase is quite a mouthful. It is easier to
refer to Emacs simply as an editor. Moreover, everything you do in Emacs—find
the Mayan date and phases of the moon, simplify polynomials, debug code, manage
files, read letters, write books—all these activities are kinds of editing in the most
general sense of the word.)
Although Emacs Lisp is usually thought of in association only with Emacs, it is
a full computer programming language. You can use Emacs Lisp as you would any
other programming language.
Perhaps you want to understand programming; perhaps you want to extend
Emacs; or perhaps you want to become a programmer. This introduction to Emacs
Lisp is designed to get you started: to guide you in learning the fundamentals of
programming, and more importantly, to show you how you can teach yourself to go
further."
    (declare (preface &optional lisp learn &rest stream)
             (if (preface lisp)
                 ((t (function (preface lisp) lisp)
                     (function (preface lisp) learn)
                     (function (preface lisp) stream)))

              (else 
                       (preface lisp)))))